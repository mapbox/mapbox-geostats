#!/usr/bin/env node
'use strict';

/* eslint-disable no-console */
const meow = require('meow');
const geostats = require('../');

const help = `
  Usage
    mapbox-geostats <input> <options>

    Output is logged to the console as a JSON string or written into mbtiles
    when using --into-md option.
    By default ignoring values of these brief attributes: id, name, name1,
    name2, originalid, adm0_l, amd0_r, disputed_name, ref, fid, uuid.

  Options
    --attributes, -a Specify attributes to analyze. The provided value
                     will be parsed as an array, split on commas.
    --brief-attributes Override default values for brief attributes. Provided
                       value will be parsed as an array, split on commas.
                       Cannot be used with --force-all-attributes.
    --force-all-attributes, -f Include values of brief attributes. Cannot be
                               used with --brief-attributes.
    --ignore-translations Exclude name translations attributes (name_int,
                         name_de, name_en, name:*). Default: true.
    --tile-stats-values-limit Limit the number of unique attribute values to
                              report. Default: 50. If exceeded, show min and
                              max instead.
    --into-md Insert generated tilestats into mbtiles metadata table. Fail
              when tilestats already exist. Output is empty on success.

  Example
    mapbox-geostats cities.geojson --attributes name,pop > output.json
  `;

const cli = meow(help, {
  flags: {
    attributes: {
      type: 'string',
      alias: 'a',
    },
    briefAttributes: {
      type: 'string',
    },
    forceAllAttributes: {
      type: 'boolean',
      alias: 'f',
    },
    ignoreTranslations: {
      type: 'boolean',
      default: true,
    },
    tileStatsValuesLimit: {
      type: 'number',
      default: 50,
    },
    intoMd: {
      type: 'boolean',
    },
  },
});

const input = cli.input[0];

const options = {
  forceAllAttributes: cli.flags.forceAllAttributes,
  ignoreTranslations: cli.flags.ignoreTranslations,
  maxValuesToReport: cli.flags.tileStatsValuesLimit,
  intoMd: cli.flags.intoMd,
};

if (cli.flags.briefAttributes) {
  if (options.forceAllAttributes) return console.error('Cannot use --force-all-attributes with --brief-attributes');
  options.briefAttributes = cli.flags.briefAttributes.split(',');
}

if (cli.flags.attributes) {
  options.attributes = cli.flags.attributes.split(',');
}

if (!input) {
  console.log(cli.help);
} else {
  geostats(input, options).then((stats) => {
    if (!options.intoMd) {
      console.log(JSON.stringify(stats));
    }
  }).catch((err) => {
    console.error(err.stack);
  });
}
